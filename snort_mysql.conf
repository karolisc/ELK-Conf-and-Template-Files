input {
  jdbc {
    jdbc_driver_library => "/usr/share/java/mysql.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://127.0.0.1:3306/snort?useSSL=false"
    jdbc_user => "soc"
    jdbc_password => "soc"
    schedule => "* * * * * America/New_York"
    statement => "(select
    e.sid,
    e.cid,
    sig.sig_name as rule,
    sig.sig_rev as rule_revision,
    sig.sig_sid,
    sigc.sig_class_id as rule_class_id,
    sigc.sig_class_name as rule_class,
    e.signature as sig,
    e.timestamp as time,
    d.data_payload as payload,
    INET_NTOA(i.ip_src) as pkt_src,
    i.ip_src as ip_src,
    INET_NTOA(i.ip_dst) as pkt_dst,
    i.ip_dst as ip_dst,
    i.ip_proto as protocol_num,
    CASE WHEN i.ip_proto = 6 THEN 'tcp' WHEN i.ip_proto = 17 THEN 'udp' ELSE 'other' END as protocol,
    s.hostname as sensor,
    s.interface as sensor_iface,
    enc.encoding_text as sensor_encoding,
    CASE WHEN i.ip_proto = 6 THEN tcp.tcp_sport ELSE udp.udp_sport END as pkt_sport,
    CASE WHEN i.ip_proto = 6 THEN tcp.tcp_dport ELSE udp.udp_dport END as pkt_dport,
    CASE WHEN i.ip_proto = 6 THEN tcp.tcp_flags ELSE null END as pkt_flags,
    CASE WHEN i.ip_proto = 6 THEN tcp.tcp_res ELSE null END as pkt_tcp_reset,
    CASE WHEN i.ip_proto = 6 THEN tcp.tcp_ack ELSE null END as pkt_tcp_ack,
    CASE WHEN i.ip_proto = 6 THEN tcp.tcp_seq ELSE null END as pkt_tcp_seq
    from event as e
    left join data as d on d.cid=e.cid
    left join sensor as s on s.sid = e.sid
    left join encoding as enc on enc.encoding_type=s.encoding
    left join signature as sig on sig.sig_id=e.signature
    left join sig_class as sigc on sigc.sig_class_id=sig.sig_class_id
    left join iphdr as i on i.cid=e.cid
    left join tcphdr as tcp on tcp.cid=e.cid
    left join udphdr as udp on udp.cid=e.cid
    WHERE e.cid > :sql_last_value)
ORDER BY e.cid ASC
LIMIT 100"
     use_column_value => true
     tracking_column => "cid"
  }
}

output {
#   stdout { codec => rubydebug }
   elasticsearch {
     hosts => "127.0.0.1:9200"
     index => "snort-logstash-%{+YYYY.MM.dd}"
   }
}
